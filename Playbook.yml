- hosts: all
  become: true
  user: ec2-user
  tasks:
    - name: Install Docker
      become: yes
      become_user: root
      yum:
        name: docker
        update_cache: yes

    - name: Install pip
      become: yes
      become_user: root
      yum:
        name: python3,python3-pip
        update_cache: yes

    - name: Install Docker Compose
      become: yes
      become_user: root
      pip:
        name: docker-compose
        extra_args: --ignore-installed requests

    - name: Create Docker CLI plugins directory
      become: yes
      become_user: root
      file:
        path: /usr/local/lib/docker/cli-plugins
        state: directory
        mode: "0755"

    - name: Install Docker Compose plugin
      become: yes
      become_user: root
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-linux-x86_64
        dest: /usr/local/lib/docker/cli-plugins/docker-compose
        mode: "0755"

    - name: Start Docker
      become: yes
      become_user: root
      service:
        name: docker
        state: started
        enabled: yes

    - name: Install Node.js
      become: yes
      become_user: root
      yum:
        name: nodejs
        update_cache: yes

    - name: Install rsync
      become: yes
      become_user: root
      yum:
        name: rsync
        state: present

    - name: Ensure /app folder exists
      become: yes
      become_user: root
      file:
        path: /app
        state: directory
        mode: "0755"

    - name: Give permission to user ec2-user to /app folder
      become: yes
      become_user: root
      file:
        path: /app
        owner: ec2-user
        group: ec2-user
        mode: "0755"

    - name: Synchronize project files to /app folder
      become: yes
      become_user: root
      synchronize:
        src: ./
        dest: /app/
        delete: yes
        rsync_opts:
          - "--exclude=.git/"
          - "--exclude=node_modules/"

    - name: Create .env
      become: yes
      become_user: root
      copy:
        content: |
          POSTGRES_USER={{ POSTGRES_USER }}
          POSTGRES_PASSWORD={{ POSTGRES_PASSWORD }}
          POSTGRES_DB={{ POSTGRES_DB }}
          DATABASE_HOSTNAME={{ DATABASE_HOSTNAME }}
          PGADMIN_DEFAULT_EMAIL={{ PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD={{ PGADMIN_DEFAULT_PASSWORD }}
          FRONTEND_DNS={{ FRONTEND_DNS }}
          BACKEND_DNS={{ BACKEND_DNS }}
          PGADMIN_DNS={{ PGADMIN_DNS }}
        dest: /app/.env
        force: yes

    - name: Create .env for frontend
      become: yes
      become_user: root
      copy:
        content: |
          VITE_BACKEND_DNS={{ BACKEND_DNS }}
        dest: /app/frontend/.env

    - name: Run npm install in /app/frontend
      become: yes
      command: npm install
      args:
        chdir: /app/frontend

    - name: remove seeds
      become: yes
      command: rm -rf /app/backend/priv/repo/seeds.exs

    - name: Deploy Docker Compose stack
      become: yes
      become_user: root
      command: docker compose -f /app/docker-compose.prod.yml up -d
