# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    services:
      db:
        image: postgres:17
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    name: Build and test
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
        with:
          elixir-version: "1.15.2" # [Required] Define the Elixir version
          otp-version: "26.0" # [Required] Define the Erlang/OTP version
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Run tests
        run: mix test
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: create Key.pem
        run: echo "${{ secrets.KEY }}" > Key.pem
      - name: Set up Ansible
        uses: ansible/ansible-content-actions/.github/workflows/ansible_lint.yaml@main
        with:
          version: "latest"
          args: "Playbook.yml -i inventory.ini --private-key Key.pem"
