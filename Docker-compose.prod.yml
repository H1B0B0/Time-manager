services:
  database:
    restart: always
    image: postgres:17
    container_name: t-poo-700-stg_9_database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    restart: always
    image: elixir:1.17
    container_name: t-poo-700-stg_9_backend
    # For Bruno
    # Remove in production
    ports:
      - "4000:4000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${BACKEND_DNS}`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=4000"
    command: >
      bash -c "mix setup && mix phx.digest && mix phx.server"
    working_dir: /app
    environment:
      DATABASE_HOSTNAME: ${DATABASE_HOSTNAME}
    volumes:
      - ./backend:/app
    depends_on:
      - database

  frontend:
    restart: always
    image: node:lts-bullseye
    container_name: t-poo-700-stg_9_frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${FRONTEND_DNS}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"
    command: /bin/sh -c "npm install && npm run build && npm run serve"
    depends_on:
      - traefik

  traefik:
    restart: always
    image: traefik:v2.0.2
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/acme
      - ./volumes/traefik/logs:/logs
      - ./tls.yml:/etc/traefik/tls.yml
      - certs:/etc/ssl/traefik

  pgadmin:
    restart: always
    image: dpage/pgadmin4
    container_name: t-poo-700-stg_9_pg_admin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`${PGADMIN_DNS}`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls.certresolver=letsencrypt"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
    depends_on:
      - database
      - traefik
    volumes:
      - pgadmin:/var/lib/pgadmin

  reverse-proxy-https-helper:
    image: alpine
    command: sh -c "cd /etc/ssl/traefik
      && wget traefik.me/cert.pem -O cert.pem
      && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - certs:/etc/ssl/traefik

volumes:
  postgres_data:
    name: t-poo-700-stg_9_postgres_data
  certs:
    name: t-poo-700-stg_9_certs
  pgadmin:
    name: t-poo-700-stg_9_pgadmin
  traefik:
    name: t-poo-700-stg_9_traefik
